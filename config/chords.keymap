/*
 * This configuration for macro-chording is adapted from sartak's zmk config
 * https://github.com/sartak/zmk-config/blob/master/config/chords.keymap
 */

#define LAYER_CHORD(name, keypress, keypos, lays) \
  chord_##name { \
    timeout-ms = <60>; \
    bindings = <keypress>; \
    key-positions = <keypos>; \
    layers = <lays>; \
  };

#define CHORD(name, keypress, keypos) \
  LAYER_CHORD(name, keypress, keypos, DEF_LAYER SENTENCE)

#define CHMAC(name, keys) \
  name: name##_macro { \
    label = #name; \
    compatible = "zmk,behavior-macro"; \
    #binding-cells = <0>; \
    tap-ms = <1>; \
    wait-ms = <1>; \
    bindings = <keys>, <&sl SENTENCE>; \
  };

// #define CHORD(name, input, output) \
//   / { \
//     combos { \
//       compatible = "zmk,combos"; \
//       LAYER_CHORD(ch_##name, &ch_##name, input, DEF_LAYER SENTENCE) \
//     }; \
//     macros { \
//       CHMAC(ch_##name, output) \
//     }; \
//   };

// #define GET_MACRO_OVERLOAD(_1, _2, _3, _4, _5, _6, _7, NAME, ...): NAME
//
// #define CH_OUT(...) GET_MACRO_OVERLOAD(__VA_ARGS__, CH_OUT7, CH_OUT6, CH_OUT5, CH_OUT4, CH_OUT3, CH_OUT2, CH_OUT1)(__VA_ARGS__)
#define CH_OUT1(k1) &kp k1 &kp SPC
#define CH_OUT2(k1, k2) &kp k1 &kp k2 &kp SPC
#define CH_OUT3(k1, k2, k3) &kp k1 &kp k2 &kp k3 &kp SPC
#define CH_OUT4(k1, k2, k3, k4) &kp k1 &kp k2 &kp k3 &kp k4 &kp SPC
#define CH_OUT5(k1, k2, k3, k4, k5) &kp k1 &kp k2 &kp k3 &kp k4 &kp k5 &kp SPC
#define CH_OUT6(k1, k2, k3, k4, k5, k6) &kp k1 &kp k2 &kp k3 &kp k4 &kp k5 &kp k6 &kp SPC
#define CH_OUT7(k1, k2, k3, k4, k5, k6, k7) &kp k1 &kp k2 &kp k3 &kp k4 &kp k5 &kp k6 &kp k7 &kp SPC

// #define CH_OUT(k1, k2, k3, k4, k5, k6, k7) &kp k1 &kp k2 &kp k3 &kp k4 &kp k5 &kp k6 &kp k7 &kp SPC

// Definitions to use with configurations that require key positions instead of
// symbols
#define _ESC 0
#define _SQT 1
#define _COMMA 2
#define _DOT 3
#define _P 4
#define _Y 5
#define _F 6
#define _G 7
#define _C 8
#define _R 9
#define _L 10
#define _BKSP 11
#define _TAB 12
#define _A 13
#define _O 14
#define _E 15
#define _U 16
#define _I 17
#define _D 18
#define _H 19
#define _T 20
#define _N 21
#define _S 22
#define _ENTER 23
#define _LSHFT 24
#define _SEMI 25
#define _Q 26
#define _J 27
#define _K 28
#define _X 29
#define _B 30
#define _M 31
#define _W 32
#define _V 33
#define _Z 34
#define _RSHFT 35
#define _ZAP 36
#define _SPACE 37
#define _EXTEND 38
#define _SHIFT 39
#define _SYMBOL 40
#define _MENU 41

// Alias for _EXTEND for now
#define _DUP _EXTEND

// Every chord needs a CHORD line in combos that defines the input keys, and
// a CHMAC line in macros that defines output text.
//
// Most of these are from CharaChorder Starter Chords
// https://docs.google.com/spreadsheets/d/1G_A77DsyoM2hod3by2BzM7Wcj3JGJsmNw7dAz98wS3U/edit?gid=199003019#gid=199003019
/ {
  combos {
    compatible = "zmk,combos";
    CHORD(ch_about,     &ch_about,     _A _B _O _U _T)
    CHORD(ch_above,     &ch_above,     _A _B _O _V _E)
    CHORD(ch_add,       &ch_add,       _A _D)
    CHORD(ch_after,     &ch_after,     _A _F _T _E _R)
    CHORD(ch_again,     &ch_again,     _A _G _I _N)
    CHORD(ch_air,       &ch_air,       _A _I _R)
    CHORD(ch_all,       &ch_all,       _A _L)
    CHORD(ch_almost,    &ch_almost,    _A _L _M)
    CHORD(ch_along,     &ch_along,     _A _L _O _N _G)
    CHORD(ch_also,      &ch_also,      _A _S _O)
    CHORD(ch_always,    &ch_always,    _A _L _W _Y)
    CHORD(ch_an,        &ch_an,        _A _N)
    CHORD(ch_and,       &ch_and,       _A _N _D)
    CHORD(ch_and,       &ch_and,       _A _N _D)
    CHORD(ch_animal,    &ch_animal,    _A _N _I _M _L)
    CHORD(ch_another,   &ch_another,   _A _N _O _T)
    CHORD(ch_answer,    &ch_answer,    _A _N _W _S)
    CHORD(ch_any,       &ch_any,       _A _N _Y)
    CHORD(ch_are,       &ch_are,       _A _R _E)
    CHORD(ch_around,    &ch_around,    _A _O _U _N _D)
    CHORD(ch_as,        &ch_as,        _A _S)
    CHORD(ch_ask,       &ch_ask,       _A _S _K)
    CHORD(ch_at,        &ch_at,        _A _T)
    CHORD(ch_away,      &ch_away,      _W _A _Y _DUP)
    CHORD(ch_back,      &ch_back,      _B _A _C _K)
    CHORD(ch_be,        &ch_be,        _B _E)
    CHORD(ch_because,   &ch_because,   _B _C)
    CHORD(ch_been,      &ch_been,      _B _E _N)
    CHORD(ch_before,    &ch_before,    _B _E _O _R)
    CHORD(ch_began,     &ch_began,     _E _G _A _N)
    CHORD(ch_begin,     &ch_begin,     _E _G _I _N)
    CHORD(ch_below,     &ch_below,     _B _E _L _O _W)
    CHORD(ch_between,   &ch_between,   _B _E _T _N)
    CHORD(ch_big,       &ch_big,       _I _G)
    CHORD(ch_book,      &ch_book,      _B _O _K)
    CHORD(ch_both,      &ch_both,      _B _O _T)
    CHORD(ch_boy,       &ch_boy,       _B _O _Y)
    CHORD(ch_but,       &ch_but,       _B _U _T)
    CHORD(ch_by,        &ch_by,        _B _Y)
    CHORD(ch_call,      &ch_call,      _C _A _L)
    CHORD(ch_came,      &ch_came,      _C _A _M _E)
    CHORD(ch_can,       &ch_can,       _C _A _N)
    CHORD(ch_car,       &ch_car,       _C _A _R)
    CHORD(ch_carry,     &ch_carry,     _C _A _R _Y)
    CHORD(ch_change,    &ch_change,    _C _H _A _N)
    CHORD(ch_children,  &ch_children,  _C _H _I _L _R)
    CHORD(ch_child,     &ch_child,     _C _H _I _L _E)
    CHORD(ch_city,      &ch_city,      _C _Y)
    CHORD(ch_close,     &ch_close,     _C _O _S _E)
    CHORD(ch_come,      &ch_come,      _C _O _M _E)
    CHORD(ch_could,     &ch_could,     _C _O _U _L _D)
    CHORD(ch_country,   &ch_country,   _C _O _N _Y)
    CHORD(ch_cut,       &ch_cut,       _C _U _D)
    CHORD(ch_day,       &ch_day,       _D _A _Y)
    CHORD(ch_did,       &ch_did,       _D _I)
    CHORD(ch_different, &ch_different, _I _F _R _T)
    CHORD(ch_do,        &ch_do,        _D _O)
    CHORD(ch_does,      &ch_does,      _D _O _E _S)
    CHORD(ch_dont,      &ch_dont,      _D _O _N _T)
    CHORD(ch_down,      &ch_down,      _D _O _W _N)
    CHORD(ch_each,      &ch_each,      _E _A _C _H)
    CHORD(ch_earth,     &ch_earth,     _E _A _R _T _H)
    CHORD(ch_eat,       &ch_eat,       _E _A _T)
    CHORD(ch_end,       &ch_end,       _E _N _D)
    CHORD(ch_enough,    &ch_enough,    _E _N _O _U)
    CHORD(ch_exit,      &ch_exit,      _E _X _T)
    CHORD(ch_picture,   &ch_picture,   _P _C _R _E)
    CHORD(ch_place,     &ch_place,     _P _L _A _C _E)
    CHORD(ch_plant,     &ch_plant,     _P _L _A _N _T)
    CHORD(ch_play,      &ch_play,      _P _L _A)
    CHORD(ch_point,     &ch_point,     _P _O _N _T)
    CHORD(ch_put,       &ch_put,       _P _U _T)
    CHORD(ch_question,  &ch_question,  _Q _U _E)
    CHORD(ch_quick,     &ch_quick,     _Q _U _C)
    CHORD(ch_quickly,   &ch_quickly,   _Q _U _C _L)
    CHORD(ch_quit,      &ch_quit,      _Q _U _T)
    CHORD(ch_quite,     &ch_quite,     _Q _I _T)
    CHORD(ch_read,      &ch_read,      _R _D)
    CHORD(ch_really,    &ch_really,    _R _L _Y)
    CHORD(ch_right,     &ch_right,     _R _I _T _E)
    CHORD(ch_river,     &ch_river,     _R _I _O)
    CHORD(ch_run,       &ch_run,       _R _U _DUP)
    CHORD(ch_said,      &ch_said,      _S _A _I _D)
    CHORD(ch_same,      &ch_same,      _S _A _M _E)
    CHORD(ch_saw,       &ch_saw,       _S _W)
    CHORD(ch_say,       &ch_say,       _S _A _Y)
    CHORD(ch_school,    &ch_school,    _S _C _H _O)
    CHORD(ch_sea,       &ch_sea,       _S _E _A)
    CHORD(ch_second,    &ch_second,    _S _E _C)
    CHORD(ch_see,       &ch_see,       _S _E)
    CHORD(ch_seem,      &ch_seem,      _S _E _M)
    CHORD(ch_sent,      &ch_sent,      _S _E _N _T)
    CHORD(ch_sentence,  &ch_sentence,  _S _E _N _T _DUP)
    CHORD(ch_set,       &ch_set,       _S _E _T)
    CHORD(ch_she,       &ch_she,       _S _H _E)
    CHORD(ch_should,    &ch_should,    _S _H _O _U)
    CHORD(ch_show,      &ch_show,      _S _H _O _W)
    CHORD(ch_side,      &ch_side,      _S _I _D _E)
    CHORD(ch_small,     &ch_small,     _S _M _A)
    CHORD(ch_so,        &ch_so,        _S _O)
    CHORD(ch_some,      &ch_some,      _S _O _M _E)
    CHORD(ch_something, &ch_something, _S _T _H _N)
    CHORD(ch_sometimes, &ch_sometimes, _S _O _M _E _T)
    CHORD(ch_song,      &ch_song,      _S _O _N _G)
    CHORD(ch_soon,      &ch_soon,      _S _O _N _DUP)
    CHORD(ch_sound,     &ch_sound,     _S _O _U _N _D)
    CHORD(ch_spell,     &ch_spell,     _S _P _E _DUP)
    CHORD(ch_start,     &ch_start,     _S _T _A _R _DUP)
    CHORD(ch_state,     &ch_state,     _S _T _A _E)
    CHORD(ch_still,     &ch_still,     _S _T _I _DUP)
    CHORD(ch_stop,      &ch_stop,      _S _T _O _P)
    CHORD(ch_story,     &ch_story,     _S _T _O _R _Y)
    CHORD(ch_study,     &ch_study,     _S _T _D _Y)
    CHORD(ch_such,      &ch_such,      _S _U _C _H)
    CHORD(ch_take,      &ch_take,      _T _A _K _E)
    CHORD(ch_talk,      &ch_talk,      _T _A _L _K)
    CHORD(ch_tell,      &ch_tell,      _T _E _L _DUP)
    CHORD(ch_than,      &ch_than,      _T _H _A _N)
    CHORD(ch_that,      &ch_that,      _T _H _A)
    CHORD(ch_the,       &ch_the,       _T _H _E)
    CHORD(ch_their,     &ch_their,     _T _H _E _I _R)
    CHORD(ch_them,      &ch_them,      _T _E _M _DUP)
    CHORD(ch_then,      &ch_then,      _T _H _E _N)
    CHORD(ch_there,     &ch_there,     _T _H _E _R)
    CHORD(ch_these,     &ch_these,     _T _H _E _S)
    CHORD(ch_they,      &ch_they,      _T _H _E _Y)
    CHORD(ch_thing,     &ch_thing,     _T _I _N _G)
    CHORD(ch_think,     &ch_think,     _T _H _N _K)
    CHORD(ch_this,      &ch_this,      _T _H _I _S)
    CHORD(ch_those,     &ch_those,     _T _H _O _S _E)
    CHORD(ch_though,    &ch_though,    _T _H _O _U)
    CHORD(ch_thought,   &ch_thought,   _T _H _O _U _DUP)
    CHORD(ch_three,     &ch_three,     _T _H _R _E _DUP)
    CHORD(ch_through,   &ch_through,   _T _H _R _U)
    CHORD(ch_time,      &ch_time,      _T _I _M _E)
    CHORD(ch_to,        &ch_to,        _T _O)
    CHORD(ch_together,  &ch_together,  _T _G _R)
    CHORD(ch_too,       &ch_too,       _T _O _DUP)
    CHORD(ch_took,      &ch_took,      _T _O _K)
    CHORD(ch_tree,      &ch_tree,      _T _R _E)
    CHORD(ch_try,       &ch_try,       _T _R _Y)
    CHORD(ch_turn,      &ch_turn,      _T _U _R _DUP)
    CHORD(ch_two,       &ch_two,       _T _U)
    CHORD(ch_under,     &ch_under,     _U _N _D)
    CHORD(ch_until,     &ch_until,     _U _N _T)
    // CHORD(ch_up,        &ch_up,        _U _P)
    CHORD(ch_us,        &ch_us,        _U _S)
    CHORD(ch_use,       &ch_use,       _U _S _E)
    CHORD(ch_very,      &ch_very,      _V _E _Y)
    CHORD(ch_walk,      &ch_walk,      _W _A _L _K)
    CHORD(ch_want,      &ch_want,      _W _A _N)
    CHORD(ch_was,       &ch_was,       _W _A _S)
    CHORD(ch_watch,     &ch_watch,     _A _C _H)
    CHORD(ch_water,     &ch_water,     _DUP _A _T _E _R)
    CHORD(ch_way,       &ch_way,       _W _A _Y)
    CHORD(ch_we,        &ch_we,        _W _E _S)
    CHORD(ch_well,      &ch_well,      _W _E _L)
    CHORD(ch_went,      &ch_went,      _DUP _E _N _T)
    CHORD(ch_were,      &ch_were,      _W _E _R)
    CHORD(ch_what,      &ch_what,      _W _H _A)
    CHORD(ch_when,      &ch_when,      _W _H _E _N)
    CHORD(ch_where,     &ch_where,     _W _H _E _R)
    CHORD(ch_which,     &ch_which,     _I _C _H)
    CHORD(ch_while,     &ch_while,     _W _H _I _L _E)
    CHORD(ch_white,     &ch_white,     _DUP _H _I _T _E)
    CHORD(ch_who,       &ch_who,       _W _H _O)
    CHORD(ch_why,       &ch_why,       _W _H _Y)
    CHORD(ch_will,      &ch_will,      _W _I _L)
    CHORD(ch_with,      &ch_with,      _W _H _I)
    CHORD(ch_without,   &ch_without,   _W _O _DUP)
    CHORD(ch_word,      &ch_word,      _W _O _R _D)
    CHORD(ch_work,      &ch_work,      _W _O _R _K)
    CHORD(ch_world,     &ch_world,     _O _R _L _D)
    CHORD(ch_would,     &ch_would,     _O _U _L _D)
    CHORD(ch_write,     &ch_write,     _W _R _I)
    CHORD(ch_year,      &ch_year,      _Y _E _A _R)
    CHORD(ch_you,       &ch_you,       _Y _O)
    CHORD(ch_young,     &ch_young,     _Y _O _N _G)
    CHORD(ch_your,      &ch_your,      _U _R)
  };
  macros {
    CHMAC(ch_because, CH_OUT7(B, E, C, A, U, S, E))
  };
};

// CHORD(because, _B _C,          CH_OUT(B, E, C, A, U, S, E))

// CHORD(about,   _A _B _O _U _T, &kp A)
// CHORD(because, _B _C,          &kp B)

// / {
//   combos {
//     compatible = "zmk,combos";
//
//     // CHORD(ch_about, &ch_about, P_A P_B P_O P_U P_T)
//     // CHORD(ch_above, &ch_above, P_A P_B P_O P_V P_E)
//     // CHORD(ch_after, &ch_after, P_A P_F P_T P_E P_R)
//   };
// };
//
// / {
//   macros {
//   };
// };
